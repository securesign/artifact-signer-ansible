---
- name: Rotate TSA key
  hosts: molecule
  gather_facts: true
  become: true
  vars_files:
    - "{{ molecule_ephemeral_directory     + '/vars.yml' }}"
  vars:
    volumes:
      tsa-signing-keys: "{{ molecule_ephemeral_directory }}/tsa-signing-keys"
      tsa-repository: "{{ molecule_ephemeral_directory }}/tsa-repo"
  tasks:
    - name: Ensure tsa-signing-keys volume exists
      ansible.builtin.command:
        cmd: "podman volume create tsa-signing-keys"
      register: tsa_signing_keys_volume
      changed_when: "'already exists' not in tsa_signing_keys_volume.stdout"
      failed_when: false

    - name: Ensure tsa-repository volume exists
      ansible.builtin.command:
        cmd: "podman volume create tsa-repository"
      register: tsa_repository_volume
      changed_when: "'already exists' not in tsa_repository_volume.stdout"
      failed_when: false

    - name: Ensure tsa-repo directory exists
      ansible.builtin.stat:
        path: "{{ volumes['tsa-repository'] }}/../tsa-repo"
      register: tsa_repo_dir
      delegate_to: localhost
      become: false

    - name: Create tsa-repo directory if missing
      ansible.builtin.file:
        path: "{{ volumes['tsa-repository'] }}/../tsa-repo"
        state: directory
      delegate_to: localhost
      become: false

    - name: TSA key rotation
      ansible.builtin.set_fact:
        tas_single_node_tsa: "{{ (tas_single_node_tsa | default({})) | combine({
        'private_key': lookup('file', molecule_scenario_directory + '/test_creds/tsa/new-tsa-key.pem'),
            'certificate': lookup('file', molecule_scenario_directory + '/test_creds/tsa/new-tsa-chain.pem'),
            'ca_passphrase': 'tsa'
        }) }}"
    - name: Update TUF repository
      ansible.builtin.include_tasks:
        file: tasks/tuf.yml
      vars:
        component: 'tsa'
        active_key_path: '/etc/rhtas/certs/tsa.pem'
        active_key_name: 'tsa_v1.crt.pem'
        new_key_content: "{{ lookup('file', molecule_scenario_directory + '/test_creds/tsa/new-tsa-key.pem') }}"
        new_key_name: 'new-tsa.pem'
      
    - name: Archive tsa-repo locally
      ansible.builtin.command:
        cmd: "tar -czf {{ molecule_ephemeral_directory }}/tsa-repo.tar.gz -C {{ volumes['tsa-repository'] }} ../tsa-repo"
      delegate_to: localhost
      become: false

    - name: Set base64-encoded archive as variable
      ansible.builtin.set_fact:
        tas_single_node_trust_root:
          full_archive: "{{ lookup('file', molecule_ephemeral_directory + '/tsa-repo.tar.gz') | b64encode }}"

    - name: Store generated values to var file
      ansible.builtin.copy:
        content: "{{ vars | dict2items | selectattr('key', 'search', '^tas_single_node_') | items2dict | to_nice_yaml }}"
        dest: "{{ molecule_ephemeral_directory + '/vars.yml' }}"
      delegate_to: localhost
      become: false



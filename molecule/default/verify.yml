- name: Verify
  hosts: molecule
  gather_facts: true
  become: true
  vars:
    test_dir_path: "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/../../vm-testing/test"
  vars_files:
    - vars/vars.yml
  tasks:
    - name: Get IP of the current node
      # The tasks below run locally, so their ansible_ssh_host is 127.0.0.1
      ansible.builtin.set_fact:
        node_ip: "{{ ansible_ssh_host }}"

    - name: Build the test Podman image
      containers.podman.podman_image:
        name: fedora-cosign
        tag: latest
        pull: false
        force: true
        path: "{{ test_dir_path }}"
        build:
          cache: true
          file: "Containerfile"
      become: false
      delegate_to: localhost

    - name: Run tests in a Podman container
      containers.podman.podman_container:
        name: "rhtas-test-container-{{ ansible_date_time.epoch }}"
        image: fedora-cosign:latest
        rm: true
        recreate: true
        env:
          BASE_HOSTNAME: "{{ tas_single_node_base_hostname }}"
          USERNAME: "jdoe"
          PASSWORD: "secure"
          KEYCLOAK_URL: "https://{{ tas_single_node_oidc_issuers[0].url | urlsplit('hostname') }}"
        # NOTE: we can't add hosts with the etc_hosts parameter, because we would need to template
        # the dictionary keys for it and Ansible doesn't do that
        cmd_args:
          - "--add-host"
          - "fulcio.{{ tas_single_node_base_hostname }}:{{ node_ip }}"
          - "--add-host"
          - "rekor.{{ tas_single_node_base_hostname }}:{{ node_ip }}"
          - "--add-host"
          - "tuf.{{ tas_single_node_base_hostname }}:{{ node_ip }}"
          - "--add-host"
          - "tsa.{{ tas_single_node_base_hostname }}:{{ node_ip }}"
        volume:
          - "{{ test_dir_path }}:/mnt:z"
        entrypoint: /bin/bash
        command: /mnt/test-sign-blob.sh
        attach:
          - stdout
          - stderr
      delegate_to: localhost
      become: false
      register: blob_verify_output

    - name: Ensure the blob was verified successfully
      ansible.builtin.assert:
        that: blob_verify_output.stderr is contains("Verified OK")

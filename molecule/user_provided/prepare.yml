---
- name: Prepare
  hosts: localhost
  connection: local
  gather_facts: false
  become: yes
  tasks:
    - name: stopping service
      ansible.builtin.service:
        name: mariadb
        state: stopped

    - name: uninstalling
      ansible.builtin.yum:
        name:
          - mariadb
          - mariadb-server
          - redis
        state: absent

    - name: deletings mysql
      file:
        path: /var/lib/mysql
        state: absent

    - name: Install Redis
      ansible.builtin.yum:
        name: redis
        state: latest

    - name: Enable and start Redis
      ansible.builtin.service:
        name: redis
        enabled: yes
        state: started

    - name: Set Redis password
      shell: |
        echo "CONFIG SET requirepass "password"" | redis-cli

    - name: Install mariadb
      ansible.builtin.yum:
        name:
          - mariadb
          - mariadb-server
        state: latest

    - name: Uncommenting bind-address
      shell: |
        sed -i 's/#bind_address=0.0.0.0/bind_address=0.0.0.0/g' /etc/my.cnf.d/mariadb-server.cnf


    - name: Enable and start MariaDB
      ansible.builtin.service:
        name: mariadb
        enabled: yes
        state: started

    - name: Create Trillian Database
      shell: echo "CREATE DATABASE trillian;" | mysql

    - name: Download schema
      shell: |
        curl -sSL  https://raw.githubusercontent.com/securesign/trillian/refs/heads/main/storage/mysql/schema/storage.sql > schema.sql 

    - name: Import schema
      shell: |
        mysql -u root trillian < schema.sql
 
    - name: Prepare MariaDB installation
      shell: |
        mysql <<EOF
        ALTER USER 'root'@'localhost' IDENTIFIED BY 'rootpassword';
        GRANT ALL ON *.* to 'root'@'%' IDENTIFIED BY 'rootpassword' WITH GRANT OPTION;
        DELETE FROM mysql.user WHERE User='';
        DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
        CREATE user mysql;
        GRANT ALL ON trillian.* to 'mysql'@'%' IDENTIFIED BY 'password' WITH GRANT OPTION;
        FLUSH PRIVILEGES;
        EOF

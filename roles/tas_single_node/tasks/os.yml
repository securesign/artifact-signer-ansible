---
- name: Ensure the system is supported
  hosts: all
  gather_facts: true
  tasks:
    - name: Fail if the OS is not RHEL
      ansible.builtin.fail:
        msg: "Unsupported OS. This playbook supports only RHEL."
      when: ansible_facts['os_family'] != 'RedHat'

    - name: Fail if the OS version is lower than 9.2
      ansible.builtin.fail:
        msg: "Unsupported OS version. This playbook supports only RHEL 9.2 or higher."
      when: (ansible_facts['distribution'] == 'RedHat' and
             (ansible_facts['distribution_major_version'] | int < 9 or
              (ansible_facts['distribution_major_version'] | int == 9 and
               ansible_facts['distribution_minor_version'] | int < 2)))

    - name: Fail if the architecture is not x86_64
      ansible.builtin.fail:
        msg: "Unsupported architecture. This playbook supports only x86_64."
      when: ansible_facts['architecture'] != 'x86_64'

- name: Install System Packages dependencies
  ansible.builtin.package:
    name: "{{ tas_single_node_system_packages }}"

- name: Install Cockpit
  ansible.builtin.include_role:
    name: cockpit
  vars:
    cockpit_packages: "{{ tas_single_node_cockpit.cockpit_packages }}"
    cockpit_manage_firewall: "{{ tas_single_node_cockpit.cockpit_manage_firewall }}"
  when: cockpit.enabled | bool

- name: Configure /etc/hosts DNS block
  ansible.builtin.blockinfile:
    dest: /etc/hosts
    content: "{{ lookup('ansible.builtin.template', 'configs/etc-hosts.j2') }}"
    state: present
    create: true
    mode: "0644"
    marker: "# {mark} ANSIBLE MANAGED INGRESS BLOCK"
  when: tas_single_node_setup_host_dns | bool

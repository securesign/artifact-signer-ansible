---
- name: Check OIDC issuers
  ansible.builtin.fail:
    msg: "Either tas_single_node_fulcio.fulcio_config.oidc_issuers or tas_single_node_fulcio.fulcio_config.meta_issuers must be specified"
  when: not tas_single_node_fulcio.fulcio_config.oidc_issuers and not tas_single_node_fulcio.fulcio_config.meta_issuers

- name: Prevent usage of memory signer for TSA
  ansible.builtin.fail:
    msg: "'memory' signer can't be used for TSA"
  when: tas_single_node_tsa.signer_type == "memory"

- name: Prevent usage of memory signer for Rekor
  ansible.builtin.fail:
    msg: "'memory' signer can't be used for Rekor"
  when: tas_single_node_rekor_signer_type == "memory"

- name: Check custom rekor key id's are unique.
  when: (tas_single_node_rekor.public_keys | length > 0) and (tas_single_node_rekor.private_keys | length > 0)
  ansible.builtin.assert:
    that: |
          (((tas_single_node_rekor.private_keys | list) + (tas_single_node_rekor.public_keys| list) )  | map(attribute='id') | list |  unique | length )
          ==  (((tas_single_node_rekor.private_keys | list) + (tas_single_node_rekor.public_keys| list ))  | map(attribute='id') | list | length )
    msg: "Custom keys declared within 'tas_single_node_rekor' must have unique ID's."

- name: Check that public key id exists for sharding configuration
  when: (tas_single_node_rekor.sharding_config | length > 0)
  ansible.builtin.assert:
    that: (tas_single_node_rekor.public_keys | selectattr('id', 'equalto', key_var.pem_pub_key) | map(attribute='id') | length ) > 0
  loop: "{{ tas_single_node_rekor.sharding_config }}"
  loop_control:
    loop_var: key_var

- name: Check custom ctlog key id's are unique.
  when: (tas_single_node_ctlog.public_keys | length > 0) and (tas_single_node_ctlog.private_keys | length > 0)
  ansible.builtin.assert:
    that: |
          (((tas_single_node_ctlog.private_keys | list) + (tas_single_node_ctlog.public_keys| list) )  | map(attribute='id') | list |  unique | length )
          ==  (((tas_single_node_ctlog.private_keys | list) + (tas_single_node_ctlog.public_keys| list ))  | map(attribute='id') | list | length )
    msg: "Custom keys declared within 'tas_single_node_ctlog' must have unique ID's."

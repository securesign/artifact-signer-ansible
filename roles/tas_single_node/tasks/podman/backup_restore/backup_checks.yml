- name: Populate Service Facts
  ansible.builtin.service_facts:

- name: Prune Backup Service
  when: not tas_single_node_backup_restore.backup.enabled and 'tas_backup.service' in ansible_facts.services
  block:
    - name: Stop Backup Service
      ansible.builtin.systemd:
        name: tas_backup.service
        state: stopped
        enabled: false

    - name: Remove All Backup Files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ tas_single_node_systemd_directory }}/tas_backup.service"
        - /usr/local/bin/tas_backup.sh
        - "{{ tas_single_node_systemd_directory }}/tas_backup_timer.timer"

    - name: Reload Systemd Daemon
      ansible.builtin.systemd:
        daemon_reload: true

- name: Run Manual Backup and Exit
  when: tas_single_node_backup_restore.backup.force_run and
        not tas_single_node_backup_restore.restore.enabled
  block:
    - name: Populate Service Facts
      ansible.builtin.service_facts:

    - name: Fail if passphrase is not provided
      ansible.builtin.fail:
        msg: "Passphrase must be set for the backup to complete successfully and securely."
      when: tas_single_node_backup_restore.backup.passphrase == ''

    - name: Inform the user if tas_backup service doesn't exist
      ansible.builtin.fail:
        msg: "The tas_backup service does not exist. Please ensure a successful collection run has completed without the force_run option."
      when: "'tas_backup.service' not in ansible_facts.services"

    - name: Run Backup Oneshot Job
      ansible.builtin.systemd:
        name: tas_backup.service
        state: started

    - name: Exit after Backup
      ansible.builtin.meta: end_host

---
- name: Load Apache config content
  ansible.builtin.set_fact:
    index_html_content: "{{ lookup('ansible.builtin.template', 'configs/index.html.j2') }}"

# - name: Create Apache config ConfigMap
#   ansible.builtin.copy:
#     content: "{{ configmap_content | to_nice_yaml(indent=2) }}"
#     dest: "{{ tas_single_node_apache_config }}"
#     mode: "0600"
#   vars:
#     configmap_content:
#       kind: ConfigMap
#       apiVersion: v1
#       metadata:
#         name: apache-config
#         namespace: cli-server
#       data:
#         index.html: "{{ index_html_content }}"
#   register: apache_configmap_result

- name: Check if apache-config volume exists
  ansible.builtin.command: podman volume ls -q -f name=apache-config
  register: volume_check
  changed_when: false
  failed_when: false

- name: Create Apache config volume
  ansible.builtin.command: podman volume create apache-config
  when: volume_check.stdout == ""

- name: Get Apache config volume mountpoint
  ansible.builtin.shell:
    cmd: >-
      set -o pipefail &&
      podman volume inspect apache-config | jq -r '.[0].Mountpoint'
  register: apache_config_mountpoint
  changed_when: false

- name: Mount files to the volume
  ansible.builtin.copy:
    dest: "{{ apache_config_mountpoint.stdout }}/index.html"
    content: "{{ index_html_content }}"
    mode: '0644'

- name: Deploy CLI server pod
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: started
      systemd_file: cli-server
      network: "{{ tas_single_node_podman_network }}"
      kube_file_content: "{{ lookup('ansible.builtin.template', 'manifests/cli-server/cli-server.j2') | from_yaml }}"
      # configmap: "{{ tas_single_node_apache_config }}"
      # configmap_changed: "{{ apache_configmap_result.changed }}"

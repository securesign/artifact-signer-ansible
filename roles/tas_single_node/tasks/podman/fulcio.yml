---
- name: Confirmed required parameters provided
  ansible.builtin.assert:
    that:
      - tas_single_node_base_hostname is defined
      - tas_single_node_base_hostname | trim | length > 0
    msg: "'tas_single_node_base_hostname' must be specified"

- name: Slurp Fulcio Certificates
  ansible.builtin.slurp:
    src: "{{ item }}"
  loop:
    - "{{ tas_single_node_remote_fulcio_private_key }}"
    - "{{ tas_single_node_remote_fulcio_public_key }}"
    - "{{ tas_single_node_remote_fulcio_root_ca }}"
  register: remote_fulcio_certificates

- name: Load Fulcio config content
  ansible.builtin.set_fact:
    fulcio_config_content: "{{ lookup('ansible.builtin.template', 'configs/fulcio-oidc.conf.j2') | trim }}"

- name: Create Fulcio Config ConfigMap
  ansible.builtin.copy:
    content: "{{ configmap_content | to_nice_yaml(indent=2) }}"
    dest: "{{ tas_single_node_fulcio_server_config }}"
    mode: "0600"
  vars:
    configmap_content:
      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: fulcio-config
        namespace: fulcio-system
      data:
        config.yaml: |
          {{ fulcio_config_content }}
  register: configmap_result

- name: Create Fulcio Secret
  ansible.builtin.copy:
    content: "{{ secret_content | to_nice_yaml(indent=2) }}"
    dest: "{{ tas_single_node_fulcio_server_secret_config }}"
    mode: "0600"
  vars:
    secret_content:
      kind: Secret
      apiVersion: v1
      metadata:
        name: fulcio-server-secret
        namespace: fulcio-system
      data:
        key.pem: |
          {{ (remote_fulcio_certificates.results | selectattr('source', 'equalto', tas_single_node_remote_fulcio_private_key) | list | first).content }}
        cert.pem: |
          {{ (remote_fulcio_certificates.results | selectattr('source', 'equalto', tas_single_node_remote_fulcio_root_ca) | list | first).content }}
        public: |
          {{ (remote_fulcio_certificates.results | selectattr('source', 'equalto', tas_single_node_remote_fulcio_public_key) | list | first).content }}
        password: "{{ tas_single_node_fulcio_ca_passphrase | b64encode }}"
  register: secret_result

- name: Deploy Fulcio Pod
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: started
      systemd_file: fulcio
      network: "{{ tas_single_node_podman_network }}"
      kube_file_content: "{{ lookup('ansible.builtin.template', 'manifests/fulcio/fulcio-server.j2') | from_yaml }}"
      configmap: "{{ tas_single_node_fulcio_server_config }}"
      configmap_changed: "{{ configmap_result.changed }}"
      secret: "{{ tas_single_node_fulcio_server_secret_config }}"
      secret_changed: "{{ secret_result.changed }}"

---
- name: Confirmed required parameters provided
  ansible.builtin.assert:
    that:
      - tas_single_node_base_hostname is defined
      - tas_single_node_base_hostname | trim | length > 0
    msg: "'tas_single_node_base_hostname' must be specified"

- name: Slurp Fulcio Certificates
  ansible.builtin.slurp:
    src: "{{ item }}"
  loop:
    - "{{ tas_single_node_remote_fulcio_private_key }}"
    - "{{ tas_single_node_remote_fulcio_public_key }}"
    - "{{ tas_single_node_remote_fulcio_root_ca }}"
  register: remote_fulcio_certificates

- name: Load Fulcio config content
  ansible.builtin.set_fact:
    fulcio_config_content: "{{ lookup('ansible.builtin.template', 'configs/fulcio-oidc.conf.j2') | trim }}"

- name: Mount fulcio files to the volumes
  no_log: true
  block:
    - name: Create pod with volumes mounted
      ansible.builtin.shell: |
        podman pod rm -f mount-pod || true && \
        podman pod create --name mount-pod -v fulcio-cert:/cert -v fulcio-config:/config
      register: pod_create_result
      changed_when: false

    - name: Start persistent container in mount-pod
      ansible.builtin.shell: |
        podman run -d --pod mount-pod quay.io/libpod/busybox:latest sleep infinity
      changed_when: false
      when: pod_create_result.rc == 0

    - name: Get fulcio-cert volume mountpoint
      ansible.builtin.shell:
        cmd: >-
          set -o pipefail &&
          podman volume inspect fulcio-cert | jq -r '.[0].Mountpoint'
      register: fulcio_cert_mountpoint
      changed_when: false

    - name: Mount fulcio cert files to fulcio-cert volume
      ansible.builtin.copy:
        dest: "{{ fulcio_cert_mountpoint.stdout }}/{{ item.key }}"
        content: "{{ item.value }}"
        mode: '0644'
      loop: "{{ data | dict2items }}"
      when: fulcio_cert_mountpoint.stdout is defined
      vars:
        data:
          key.pem: >-
            {{ (remote_fulcio_certificates.results
            | selectattr('source', 'equalto', tas_single_node_remote_fulcio_private_key)
            | list | first).content | b64decode }}
          cert.pem: >-
            {{ (remote_fulcio_certificates.results
            | selectattr('source', 'equalto', tas_single_node_remote_fulcio_root_ca)
            | list | first).content | b64decode }}
          public: >-
            {{ (remote_fulcio_certificates.results
            | selectattr('source', 'equalto', tas_single_node_remote_fulcio_public_key)
            | list | first).content | b64decode }}
          password: "{{ tas_single_node_fulcio.ca_passphrase }}"

    - name: Get fulcio-config volume mountpoint
      ansible.builtin.shell:
        cmd: >-
          set -o pipefail &&
          podman volume inspect fulcio-config | jq -r '.[0].Mountpoint'
      register: fulcio_config_mountpoint
      changed_when: false

    - name: Mount fulcio config files to fulcio-config volume
      ansible.builtin.copy:
        dest: "{{ fulcio_config_mountpoint.stdout }}/{{ item.key }}"
        content: "{{ item.value }}"
        mode: '0644'
      loop: "{{ data | dict2items }}"
      when: fulcio_config_mountpoint.stdout is defined
      vars:
        data:
          config.yaml: |
            {{ fulcio_config_content }}
          fulcio-trusted-ca.pem: |
            {{ tas_single_node_fulcio.trusted_ca }}

    - name: Remove the pod after files are copied
      ansible.builtin.shell: |
        podman pod rm -f mount-pod
      changed_when: false

- name: Deploy Fulcio Pod
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: started
      systemd_file: fulcio
      network: "{{ tas_single_node_podman_network }}"
      kube_file_content: "{{ lookup('ansible.builtin.template', 'manifests/fulcio/fulcio-server.j2') | from_yaml }}"

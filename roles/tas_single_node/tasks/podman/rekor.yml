---
- name: Obtain Trillian Tree ID
  ansible.builtin.include_tasks: podman/createtree.yml
  vars:
    tas_single_node_treeid_config: "{{ tas_single_node_rekor_treeid_config }}"

- name: Create Rekor Sharding ConfigMap
  ansible.builtin.copy:
    content: "{{ configmap_content | to_nice_yaml(indent=2) }}"
    dest: "{{ tas_single_node_rekor_server_config }}"
    mode: "0600"
  vars:
    configmap_content:
      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: rekor-server-config
        namespace: rekor-system
      data:
        sharding-config.yaml: ""
  register: configmap_result

- name: Slurp Rekor keys
  ansible.builtin.slurp:
    src: "{{ item }}"
  loop:
    - "{{ tas_single_node_remote_rekor_private_key }}"
    - "{{ tas_single_node_remote_rekor_public_key }}"
  register: remote_rekor_keys

- name: Create Rekor secret
  ansible.builtin.copy:
    content: "{{ secret_content | to_nice_yaml(indent=2) }}"
    dest: "{{ tas_single_node_rekor_secret }}"
    mode: "0600"
  vars:
    secret_content:
      kind: Secret
      apiVersion: v1
      metadata:
        name: rekor-secret
        namespace: rekor-system
      data:
        private: |
          {{ (remote_rekor_keys.results | selectattr('source', 'equalto', tas_single_node_remote_rekor_private_key) | list | first).content }}
        public: |
          {{ (remote_rekor_keys.results | selectattr('source', 'equalto', tas_single_node_remote_rekor_public_key) | list | first).content }}
  register: secret_result

- name: Deploy Rekor Redis Pod
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: started
      systemd_file: redis
      network: "{{ tas_single_node_podman_network }}"
      kube_file_content: "{{ lookup('ansible.builtin.template', 'manifests/rekor/redis-server.j2') | from_yaml }}"
  when: tas_single_node_rekor_redis.database_deploy

- name: Deploy Rekor Server Pod
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: started
      systemd_file: rekor
      network: "{{ tas_single_node_podman_network }}"
      kube_file_content: "{{ lookup('ansible.builtin.template', 'manifests/rekor/rekor-server.j2') | from_yaml }}"
      configmap: "{{ tas_single_node_rekor_server_config }}"
      configmap_changed: "{{ configmap_result.changed }}"
      secret: "{{ tas_single_node_rekor_secret }}"
      secret_changed: "{{ secret_result.changed }}"

- name: Deploy backfill Redis job
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: started
      systemd_file: backfill_redis
      network: "{{ tas_single_node_podman_network }}"
      kube_file_content: "{{ lookup('template', 'manifests/rekor/backfill_redis.j2') | from_yaml }}"
  when: tas_single_node_backfill_redis.enabled

- name: Copy backfill_redis.timer file to server
  ansible.builtin.template:
    src: systemd/backfill_redis.timer.j2
    dest: "{{ tas_single_node_systemd_directory }}/backfill_redis.timer"
    mode: "0644"
  when: tas_single_node_backfill_redis.enabled
  register: copy_timer_systemd_file

- name: Enable and start backfill_redis.timer
  ansible.builtin.systemd:
    name: backfill_redis.timer
    enabled: true
    state: started
    daemon_reload: "{{ copy_timer_systemd_file.changed }}"
  when: tas_single_node_backfill_redis.enabled

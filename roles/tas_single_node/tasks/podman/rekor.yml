---
- name: Obtain Trillian Tree ID
  ansible.builtin.include_tasks: podman/createtree.yml
  vars:
    tas_single_node_treeid_config: "{{ tas_single_node_rekor_treeid_config }}"


- name: Load rekor sharding content
  block:
    - name: Generate Rekor Sharding Config
      ansible.builtin.set_fact:
        rekor_sharding_content: "{{ lookup('ansible.builtin.template', 'configs/rekor-sharding-config-template.j2') }}"

- name: Create Rekor Sharding Config
  ansible.builtin.copy:
    content: "{{ rekor_sharding_content }}"
    dest: "{{ tas_single_node_rekor_server_config }}"
    mode: "0600"
  register: configmap_result

- name: Slurp Rekor keys
  ansible.builtin.slurp:
    src: "{{ item }}"
  with_items:
    - "{{ tas_single_node_remote_rekor_private_key }}"
    - "{{ tas_single_node_remote_rekor_public_key }}"
  register: remote_rekor_keys

- name: Create Rekor Secret
  ansible.builtin.set_fact:
    rekor_secret_content: "{{ lookup('ansible.builtin.template', 'configs/certs-secret-template.j2') }}"
  vars:
    secret_name: rekor-secret
    secret_namespace: rekor-system
    key_name: [private, public]
    key_ids: ['{{ tas_single_node_rekor.private_keys }}', '{{ tas_single_node_rekor.public_keys }}']
    key_lists: ['{{ tas_single_node_remote_rekor_private_key }}', '{{ tas_single_node_remote_rekor_public_key }}']
    slurped_certs: '{{ remote_rekor_keys }}'

- name: Create Custom rekor Secret
  ansible.builtin.copy:
    content: "{{ rekor_secret_content }}"
    dest: "{{ tas_single_node_rekor_secret }}"
    mode: "0600"
  register: secret_result

- name: Deploy Rekor Redis Pod
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: started
      systemd_file: redis
      network: "{{ tas_single_node_podman_network }}"
      kube_file_content: "{{ lookup('ansible.builtin.template', 'manifests/rekor/redis-server.j2') | from_yaml }}"
  when: tas_single_node_rekor_redis.database_deploy

- name: Deploy Rekor Server Pod
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: started
      systemd_file: rekor
      network: "{{ tas_single_node_podman_network }}"
      kube_file_content: "{{ lookup('ansible.builtin.template', 'manifests/rekor/rekor-server.j2') | from_yaml }}"
      configmap: "{{ tas_single_node_rekor_server_config }}"
      configmap_changed: "{{ configmap_result.changed }}"
      secret: "{{ tas_single_node_rekor_secret }}"
      secret_changed: "{{ secret_result.changed }}"

- name: Deploy backfill Redis job
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: started
      systemd_file: backfill_redis
      systemd_type: oneshot
      network: "{{ tas_single_node_podman_network }}"
      kube_file_content: "{{ lookup('template', 'manifests/rekor/backfill_redis.j2') | from_yaml }}"
  when: tas_single_node_backfill_redis.enabled

- name: Copy backfill_redis.timer file to server
  ansible.builtin.template:
    src: systemd/backfill_redis.timer.j2
    dest: "{{ tas_single_node_systemd_directory }}/backfill_redis.timer"
    mode: "0644"
  when: tas_single_node_backfill_redis.enabled
  register: copy_timer_systemd_file

- name: Enable and start backfill_redis.timer
  ansible.builtin.systemd:
    name: backfill_redis.timer
    enabled: true
    state: started
    daemon_reload: "{{ copy_timer_systemd_file.changed }}"
  when: tas_single_node_backfill_redis.enabled

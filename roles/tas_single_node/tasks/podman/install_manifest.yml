---
# NOTE: determining when the service will restart with `when: ...` is not ideal, however
# we would need a dynamic handler otherwise and these are a bit fragile.

- name: Set location of Podman Play Manifest
  ansible.builtin.set_fact:
    kube_play_file: >-
      {{ tas_single_node_kube_manifest_dir + '/' + podman_spec.kube_file_content.metadata.namespace + '_'
      + podman_spec.kube_file_content.metadata.name + '.yml' }}

- name: Copy Manifest to Server
  ansible.builtin.copy:
    content: "{{ podman_spec.kube_file_content | to_nice_yaml(indent=2) }}"
    dest: "{{ kube_play_file }}"
    mode: "0600"
  register: copy_manifest

- name: Create Secret
  # Note for when we'll use containers.podman.podman_play:
  # We can't use podman_secret because we support Podman 4.4.1 and the podman_secret module only
  # supports idempotency with >= 4.7.0: https://github.com/containers/ansible-podman-collections/issues/692
  # Unfortunately podman_play doesn't properly understand idempotency with secrets either
  # The next best thing is to identify whether the secret file changed - this is determined from the secret_changed
  # variable passed by the caller to this file
  ansible.builtin.command:
    cmd: "podman kube play {{ podman_spec.secret }}"
  when: podman_spec.secret is defined
  changed_when: podman_spec.secret is defined and podman_spec.secret_changed

- name: Copy Systemd file to Server
  ansible.builtin.template:
    src: systemd/systemd-cm.j2
    dest: "{{ tas_single_node_systemd_directory + '/' + podman_spec.systemd_file }}.service"
    mode: "0600"
  when: podman_spec.configmap is defined
  register: copy_systemd_file

- name: Copy Systemd file to Server
  ansible.builtin.template:
    src: systemd/systemd-nocm.j2
    dest: "{{ tas_single_node_systemd_directory + '/' + podman_spec.systemd_file }}.service"
    mode: "0600"
  when: podman_spec.configmap is not defined
  register: copy_systemd_file

- name: Restart Podman Service
  ansible.builtin.systemd:
    state: restarted
    enabled: true
    daemon_reload: true
    name: "{{ podman_spec.systemd_file }}"
  when: |
    copy_manifest.changed or copy_systemd_file.changed or
    (podman_spec.secret is defined and podman_spec.secret_changed) or
    (podman_spec.configmap is defined and podman_spec.configmap_changed)

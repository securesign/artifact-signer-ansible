---
- name: Ensure required parameters are provided
  ansible.builtin.assert:
    that:
      - tas_single_node_base_hostname is defined
      - tas_single_node_base_hostname | trim | length > 0
    msg: "'tas_single_node_base_hostname' must be specified"

- name: Slurp TSA certs
  ansible.builtin.slurp:
    src: "{{ item }}"
  loop:
    - "{{ tas_single_node_tsa_certificate_chain }}"
    - "{{ tas_single_node_tsa_signer_private_key }}"
  register: tsa_certs

- name: Set TSA Secret data
  ansible.builtin.set_fact:
    secret_data:
      private_key.pem: |
        {{ (tsa_certs.results | selectattr('source', 'equalto', tas_single_node_tsa_signer_private_key) | list | first).content }}
      certificate-chain.pem: |
        {{ (tsa_certs.results | selectattr('source', 'equalto', tas_single_node_tsa_certificate_chain) | list | first).content }}

- name: Add TSA secret password (if applicable)
  ansible.builtin.set_fact:
    secret_data: "{{ secret_data | combine({'password': tas_single_node_tsa.signer_passphrase | b64encode}) }}"
  when: tas_single_node_tsa.signer_type == 'file'

- name: Add TSA secret Tink keyset (if applicable)
  ansible.builtin.set_fact:
    secret_data: "{{ secret_data | combine({'encrypted_key_set': tas_single_node_tsa.tink.keyset | b64encode}) }}"
  when: tas_single_node_tsa.signer_type == 'tink'


- name: Mount TSA files to the volumes
  no_log: true
  block:
    - name: Create pod with volumes mounted
      ansible.builtin.shell: |
        podman pod rm -f mount-pod || true && \
        podman pod create --name mount-pod -v tsa-server-secret:/secret -v tsa-config:/config
      register: pod_create_result
      changed_when: false
      ignore_errors: yes

    - name: Start persistent container in mount-pod
      ansible.builtin.shell: |
        podman run -d --pod mount-pod quay.io/libpod/busybox:latest sleep infinity
      changed_when: false
      when: pod_create_result.rc == 0

    - name: Get tsa-server-secret volume mountpoint
      ansible.builtin.shell:
        cmd: >-
          set -o pipefail &&
          podman volume inspect tsa-server-secret | jq -r '.[0].Mountpoint'
      register: tsa_secrets_mountpoint
      changed_when: false

    - name: Mount TSA secrets to tsa-server-secret volume
      ansible.builtin.copy:
        dest: "{{ tsa_secrets_mountpoint.stdout }}/{{ item.key }}"
        content: "{{ item.value | b64decode }}"
        mode: '0644'
      loop: "{{ secret_data | dict2items }}"
      when: tsa_secrets_mountpoint.stdout is defined

    - name: Get tsa-config volume mountpoint
      ansible.builtin.shell:
        cmd: >-
          set -o pipefail &&
          podman volume inspect tsa-config | jq -r '.[0].Mountpoint'
      register: tsa_config_mountpoint
      changed_when: false

    - name: Mount config file to tsa-config volume
      ansible.builtin.copy:
        dest: "{{ tsa_config_mountpoint.stdout }}/{{ item.key }}"
        content: "{{ item.value }}"
        mode: '0644'
      loop: "{{ data | dict2items }}"
      when: tsa_config_mountpoint.stdout is defined
      vars:
        data:
          ntpsync.yaml: |
            {{ tas_single_node_tsa.ntp_config }}

          tsa-trusted-ca.pem: |
            {{ tas_single_node_tsa.trusted_ca }}

    - name: Remove the pod after files are copied
      ansible.builtin.shell: |
        podman pod rm -f mount-pod
      changed_when: false
      ignore_errors: yes

- name: Deploy TSA Pod
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: started
      systemd_file: tsa
      network: "{{ tas_single_node_podman_network }}"
      kube_file_content: "{{ lookup('ansible.builtin.template', 'manifests/tsa/tsa-server.j2') | from_yaml }}"

---
- name: Ensure required parameters are provided
  ansible.builtin.assert:
    that:
      - tas_single_node_base_hostname is defined
      - tas_single_node_base_hostname | trim | length > 0
    msg: "'tas_single_node_base_hostname' must be specified"

- name: Set default TSA NTP config
  ansible.builtin.set_fact:
    tsa_ntp_config_content: ""

- name: Handle user-provided custom NTP monitoring file
  when: tas_single_node_tsa_ntp_config != ''
  block:
    - name: Copy custom NTP config
      ansible.builtin.copy:
        src: "{{ tas_single_node_tsa_ntp_config }}"
        dest: "{{ tas_single_node_tsa_ntp_config_file }}"
        mode: '0600'

    - name: Slurp TSA config
      ansible.builtin.slurp:
        src: "{{ tas_single_node_tsa_ntp_config_file }}"
      register: tsa_ntp_config

    - name: Set NTP config content
      ansible.builtin.set_fact:
        tsa_ntp_config_content: "{{ tsa_ntp_config.content | b64decode }}"

- name: Slurp TSA certs
  ansible.builtin.slurp:
    src: "{{ item }}"
  loop:
    - "{{ tas_single_node_tsa_certificate_chain }}"
    - "{{ tas_single_node_tsa_signer_private_key }}"
  register: tsa_certs

- name: Set TSA Secret data
  ansible.builtin.set_fact:
    secret_data:
      private_key.pem: |
        {{ (tsa_certs.results | selectattr('source', 'equalto', tas_single_node_tsa_signer_private_key) | list | first).content }}
      certificate-chain.pem: |
        {{ (tsa_certs.results | selectattr('source', 'equalto', tas_single_node_tsa_certificate_chain) | list | first).content }}

- name: Add TSA secret password (if applicable)
  ansible.builtin.set_fact:
    secret_data: "{{ secret_data | combine({'password': tas_single_node_tsa_signer_passphrase | b64encode}) }}"
  when: tas_single_node_tsa_signer_type == 'file'

- name: Add TSA secret Tink keyset (if applicable)
  ansible.builtin.set_fact:
    secret_data: "{{ secret_data | combine({'encrypted_key_set': tas_single_node_tsa_tink_keyset | b64encode}) }}"
  when: tas_single_node_tsa_signer_type == 'tink'

- name: Create TSA Secret
  ansible.builtin.copy:
    content: "{{ secret_content | to_nice_yaml(indent=2) }}"
    dest: "{{ tas_single_node_tsa_secret }}"
    mode: "0600"
  vars:
    secret_content:
      kind: Secret
      apiVersion: v1
      metadata:
        name: tsa-server-secret
        namespace: tsa-system
      data: "{{ secret_data }}"
  register: tsa_secret_result

- name: Create TSA ConfigMap
  ansible.builtin.copy:
    content: "{{ configmap_content | to_nice_yaml(indent=2) }}"
    dest: "{{ tas_single_node_tsa_config }}"
    mode: "0600"
  vars:
    configmap_content:
      kind: ConfigMap
      apiVersion: v1
      metadata:
        name: tsa-config
        namespace: tsa-system
      data:
        ntpsync.yaml: |
          {{ tsa_ntp_config_content }}
  register: configmap_result

- name: Deploy TSA Pod
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: started
      systemd_file: tsa
      network: "{{ tas_single_node_podman_network }}"
      kube_file_content: "{{ lookup('ansible.builtin.template', 'manifests/tsa/tsa-server.j2') | from_yaml }}"
      configmap: "{{ tas_single_node_tsa_config }}"
      configmap_changed: "{{ configmap_result.changed }}"
      secret: "{{ tas_single_node_tsa_secret }}"
      secret_changed: "{{ tsa_secret_result.changed }}"

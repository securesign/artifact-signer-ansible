---
- name: Confirmed required parameters provided
  ansible.builtin.assert:
    that:
      - tas_single_node_base_hostname is defined
      - tas_single_node_base_hostname | trim | length > 0
    msg: "'tas_single_node_base_hostname' must be specified"

- name: Slurp tuf Certificates
  ansible.builtin.slurp:
    src: "{{ item }}"
  with_items:
    - "{{ tas_single_node_remote_fulcio_root_ca }}"
    - "{{ tas_single_node_tsa_certificate_chain }}"
    - "{{ tas_single_node_remote_ctlog_public_key }}"
  register: remote_tuf_certificates

- name: Retrieve Rekor Public Key
  ansible.builtin.command:
    cmd: >-
      podman exec {{ tas_single_node_rekor_server_pod }}-pod-rekor-server
      curl -k --fail --retry {{ tas_single_node_rekor.public_key_retries }}
      --retry-delay {{ tas_single_node_rekor.public_key_delay }} http://localhost:{{ tas_single_node_rekor_server_port_http }}/api/v1/log/publicKey
  register: rekor_public_key_result
  changed_when: false

- name: Mount TUF secrets to the volumes
  no_log: true
  block:
    - name: Create pod with volumes mounted
      ansible.builtin.shell: |
        podman pod rm -f mount-pod || true && \
        podman pod create --name mount-pod -v tuf-secret:/secret
      register: pod_create_result
      changed_when: false
      ignore_errors: yes

    - name: Start persistent container in mount-pod
      ansible.builtin.shell: |
        podman run -d --pod mount-pod quay.io/libpod/busybox:latest sleep infinity
      changed_when: false
      when: pod_create_result.rc == 0

    - name: Get tuf-secret volume mountpoint
      ansible.builtin.shell:
        cmd: >-
          set -o pipefail &&
          podman volume inspect tuf-secret | jq -r '.[0].Mountpoint'
      register: tuf_secrets_mountpoint
      changed_when: false

    - name: Mount TUF secrets to tuf-secret volume
      ansible.builtin.copy:
        dest: "{{ tuf_secrets_mountpoint.stdout }}/{{ item.key }}"
        content: "{{ item.value }}"
        mode: '0644'
      loop: "{{ data | dict2items }}"
      when: tuf_secrets_mountpoint.stdout is defined
      vars:
        data:
          ctfe-pubkey: >-
            {{ (remote_tuf_certificates.results
              | selectattr('source', 'equalto', tas_single_node_remote_ctlog_public_key.0)
              | list | first).content | b64decode }}
          fulcio-cert: >-
            {{ (remote_tuf_certificates.results
              | selectattr('source', 'equalto', tas_single_node_remote_fulcio_root_ca)
              | list | first).content | b64decode }}
          rekor-pubkey: >-
            {{ rekor_public_key_result.stdout }}
          tsa-cert: >-
            {{ (remote_tuf_certificates.results
              | selectattr('source', 'equalto', tas_single_node_tsa_certificate_chain)
              | list | first).content | b64decode }}

    - name: Remove the pod after files are copied
      ansible.builtin.shell: |
        podman pod rm -f mount-pod
      changed_when: false
      ignore_errors: yes

- name: Initialize trust root
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: started
      systemd_file: tuf-init-job
      systemd_type: oneshot
      network: "{{ tas_single_node_podman_network }}"
      kube_file_content: "{{ lookup('ansible.builtin.template', 'manifests/tuf/tuf-init.j2') | from_yaml }}"

- name: Deploy TUF server pod
  ansible.builtin.include_tasks: podman/install_manifest.yml
  vars:
    podman_spec:
      state: started
      systemd_file: tuf
      network: "{{ tas_single_node_podman_network }}"
      kube_file_content: "{{ lookup('ansible.builtin.template', 'manifests/tuf/tuf.j2') | from_yaml }}"

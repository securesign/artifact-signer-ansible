---
# General notes that apply throughout the file
# * openssl ecparam doesn't directly allow to encrypt the key with passphrase, so we pipe it to encryption command
# * openssl's ec curve "prime256v1" is equivalent to what everyone else calls "secp256r1"

- name: Confirmed required parameters provided
  ansible.builtin.assert:
    that:
      - tas_single_node_base_hostname is defined
      - tas_single_node_base_hostname | trim | length > 0
    msg: "'tas_single_node_base_hostname' must be specified"

- name: Create certificates directory
  ansible.builtin.file:
    state: directory
    dest: "{{ tas_single_node_certs_dir }}"
    mode: "0700"

- name: List files in certs directory
  ansible.builtin.find:
    file_type: file
    paths: "{{ tas_single_node_certs_dir }}"
  register: certs_dir_files

- name: Install openssl for generating RHTAS secrets
  ansible.builtin.package:
    name: openssl
    state: present

- name: Create private key (RSA, 4096 bits)
  ansible.builtin.command:
    cmd: "openssl genrsa -out '{{ tas_single_node_remote_private_key }}' 4096"
    creates: "{{ tas_single_node_remote_private_key }}"
  when: (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_private_key) | list | length) == 0

- name: Create root CA
  when: (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_ca) | list | length) == 0
  block:
    - name: Create certificate signing request (CSR) for CA certificate
      ansible.builtin.command:
        cmd: >-
          openssl req -new -batch
          -key '{{ tas_single_node_remote_private_key }}'
          -subj '/CN={{ tas_single_node_base_hostname }}'
          -addext 'basicConstraints=critical,CA:TRUE'
          -addext 'keyUsage = critical,keyCertSign'
      register: ca_csr
      changed_when: false

    - name: Create self-signed CA certificate from CSR
      ansible.builtin.shell:
        # valid for two years
        cmd: >-
          set -o pipefail &&
          echo "{{ ca_csr.stdout }}" |
          openssl x509 -req -days 730
          -copy_extensions copyall
          -signkey '{{ tas_single_node_remote_private_key }}'
          -out '{{ tas_single_node_remote_ca }}'
        creates: "{{ tas_single_node_remote_ca }}"

- name: Create ingress certificates
  ansible.builtin.include_tasks: create_ingress_cert.yml
  loop:
    - fulcio
    - rekor
    - tuf
    - tsa
    - rekor-search
  loop_control:
    loop_var: cert_name
  vars:
    existing_files: "{{ certs_dir_files }}"
    remote_ca_key_path: "{{ tas_single_node_remote_private_key }}"
    remote_ca_cert_path: "{{ tas_single_node_remote_ca }}"
    dns_name: "{{ cert_name }}.{{ tas_single_node_base_hostname }}"

- name: Create Fulcio root
  when: >
    (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_fulcio_private_key) | list | length) == 0
    or (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_fulcio_public_key) | list | length) == 0
    or (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_fulcio_root_ca) | list | length) == 0

  block:
    - name: Create Fulcio private key
      # NOTE: As of cosign 2.3.0, only RSA with > 2048 B pkey size or ECC with prime256v1 (==secp256r1) are supported
      ansible.builtin.shell:
        cmd: >-
          set -o pipefail &&
          openssl ecparam -genkey -name prime256v1 |
          openssl ec -des3
          -out '{{ tas_single_node_remote_fulcio_private_key }}'
          -passout 'pass:{{ tas_single_node_fulcio_ca_passphrase }}'
        creates: "{{ tas_single_node_remote_fulcio_private_key }}"

    - name: Create Fulcio public key
      ansible.builtin.command:
        cmd: >-
          openssl ec -pubout
          -in '{{ tas_single_node_remote_fulcio_private_key }}'
          -out '{{ tas_single_node_remote_fulcio_public_key }}'
          -passin 'pass:{{ tas_single_node_fulcio_ca_passphrase }}'
        creates: "{{ tas_single_node_remote_fulcio_public_key }}"

    - name: Create certificate signing request (CSR) for Fulcio root certificate
      ansible.builtin.command:
        cmd: >-
          openssl req -new -batch
          -key '{{ tas_single_node_remote_fulcio_private_key }}'
          -addext 'basicConstraints=critical,CA:TRUE'
          -addext 'keyUsage = critical,keyCertSign'
          -passin 'pass:{{ tas_single_node_fulcio_ca_passphrase }}'
      register: fulcio_root_csr
      changed_when: false

    - name: Create self-signed Fulcio root from CSR
      ansible.builtin.shell:
        # valid for two years
        cmd: >-
          set -o pipefail &&
          echo "{{ fulcio_root_csr.stdout }}" |
          openssl x509 -req -days 730
          -copy_extensions copyall
          -signkey '{{ tas_single_node_remote_fulcio_private_key }}'
          -passin 'pass:{{ tas_single_node_fulcio_ca_passphrase }}'
          -out '{{ tas_single_node_remote_fulcio_root_ca }}'
        creates: "{{ tas_single_node_remote_fulcio_root_ca }}"

- name: Create CTLog root
  when: >
    (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_ctlog_private_key) | list | length) == 0
    or (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_ctlog_public_key) | list | length) == 0

  block:
    - name: Create CTLog private key
      ansible.builtin.shell:
        cmd: >-
          set -o pipefail &&
          openssl ecparam -genkey -name prime256v1 |
          openssl ec -des3
          -out '{{ tas_single_node_remote_ctlog_private_key }}'
          -passout 'pass:{{ tas_single_node_ctlog_ca_passphrase }}'
        creates: "{{ tas_single_node_remote_ctlog_private_key }}"
    - name: Create CTLog public key
      ansible.builtin.command:
        cmd: >-
          openssl ec -pubout
          -in '{{ tas_single_node_remote_ctlog_private_key }}'
          -out '{{ tas_single_node_remote_ctlog_public_key }}'
          -passin 'pass:{{ tas_single_node_ctlog_ca_passphrase }}'
        creates: "{{ tas_single_node_remote_ctlog_public_key }}"

- name: Handle TSA certificate chain
  block:
    - name: Create TSA root private key
      ansible.builtin.shell:
        cmd: >-
          set -o pipefail &&
          openssl ecparam -genkey -name prime256v1 |
          openssl ec -des3
          -out '{{ tas_single_node_remote_tsa_private_key }}'
          -passout 'pass:{{ tas_single_node_tsa_ca_passphrase }}'
        creates: "{{ tas_single_node_remote_tsa_private_key }}"
      when: >
        (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_tsa_private_key) | list | length) == 0
        and (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_tsa_certificate_chain) | list | length) == 0
        and tas_single_node_signer_type == 'file'

    - name: Create certificate signing request (CSR) for TSA root certificate
      ansible.builtin.command:
        cmd: >-
          openssl req -new -batch
          -key '{{ tas_single_node_remote_tsa_private_key }}'
          -subj '/CN=TSA Root CA'
          -addext 'basicConstraints=critical,CA:TRUE'
          -addext 'keyUsage = keyCertSign'
          -passin 'pass:{{ tas_single_node_tsa_ca_passphrase }}'
      register: tsa_root_csr
      when: >
        (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_tsa_certificate_chain) | list | length) == 0
        and tas_single_node_signer_type == 'file'
      changed_when: false

    - name: Create self-signed TSA root CA from CSR
      ansible.builtin.shell:
        # valid for two years
        cmd: >-
          set -o pipefail &&
          echo "{{ tsa_root_csr.stdout }}" |
          openssl x509 -req -days 730
          -copy_extensions copyall
          -signkey '{{ tas_single_node_remote_tsa_private_key }}'
          -passin 'pass:{{ tas_single_node_tsa_ca_passphrase }}'
          -out '{{ tas_single_node_remote_tsa_certificate_chain }}'
        creates: "{{ tas_single_node_remote_tsa_certificate_chain }}"
      when: >
        (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_tsa_certificate_chain) | list | length) == 0
        and tas_single_node_signer_type == 'file'

    # Leaf certificate
    - name: Create TSA leaf CA private key
      ansible.builtin.shell:
        cmd: >-
          set -o pipefail &&
          openssl ecparam -genkey -name prime256v1 |
          openssl ec -des3
          -out '{{ tas_single_node_remote_tsa_signer_private_key }}'
          -passout 'pass:{{ tas_single_node_tsa_ca_passphrase }}'
        creates: "{{ tas_single_node_remote_tsa_signer_private_key }}"
      when: >
        (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_tsa_certificate_chain) | list | length) == 0
        and (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_tsa_signer_private_key) | list | length) == 0
        and tas_single_node_signer_type == 'file'

    - name: Create TSA leaf CSR
      ansible.builtin.command:
        cmd: >-
          openssl req -new -batch
          -key '{{ tas_single_node_remote_tsa_signer_private_key }}'
          -subj '/CN=TSA Leaf certificate'
          -addext 'basicConstraints=critical,CA:FALSE'
          -addext 'keyUsage = critical,digitalSignature'
          -addext 'extendedKeyUsage = critical,timeStamping'
          -passin 'pass:{{ tas_single_node_tsa_signer_passphrase }}'
      register: tsa_leaf_csr
      when: >
        (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_tsa_certificate_chain) | list | length) == 0
        and tas_single_node_signer_type == 'file'
      changed_when: false

    - name: Sign leaf certificate with Root CA
      ansible.builtin.shell:
        # valid for two years
        cmd: >-
          set -o pipefail &&
          echo "{{ tsa_leaf_csr.stdout }}" |
          openssl x509 -req -days 730
          -copy_extensions copyall
          -CA '{{ tas_single_node_remote_tsa_certificate_chain }}'
          -CAkey '{{ tas_single_node_remote_tsa_private_key }}'
          -passin 'pass:{{ tas_single_node_tsa_ca_passphrase }}'
          -out '{{ tas_single_node_remote_tsa_leaf_certificate }}'
        creates: "{{ tas_single_node_remote_tsa_leaf_certificate }}"
      when: >
        (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_tsa_certificate_chain) | list | length) == 0
        and tas_single_node_signer_type == 'file'

    - name: Combine leaf and root CA certificates into a chain
      ansible.builtin.command: >
        /bin/bash -c '
        cat {{ tas_single_node_remote_tsa_leaf_certificate }} {{ tas_single_node_remote_tsa_certificate_chain }} > /tmp/certificate-chain.tmp &&
        mv /tmp/certificate-chain.tmp {{ tas_single_node_remote_tsa_certificate_chain }};'
      register: result
      changed_when: "'changed' in result.stdout"
      when: >
        (certs_dir_files.files | selectattr('path', 'equalto', tas_single_node_remote_tsa_certificate_chain) | list | length) == 0
        and tas_single_node_signer_type == 'file'

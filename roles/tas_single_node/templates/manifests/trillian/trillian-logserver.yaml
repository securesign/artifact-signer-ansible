apiVersion: apps/v1
kind: Deployment
metadata:
  name: trillian-logserver
  namespace: trillian-system
  labels:
    app.kubernetes.io/component: trillian-logserver
    app.kubernetes.io/instance: scaffold
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: trillian
    helm.sh/chart: trillian-0.1.16
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: trillian-logserver
      app.kubernetes.io/instance: scaffold
  template:
    metadata:
      labels:
        app.kubernetes.io/component: trillian-logserver
        app.kubernetes.io/instance: scaffold
    spec:
      containers:
        - name: trillian-trillian-logserver
          image: "{{ tas_single_node_trillian_log_server_image }}"
          imagePullPolicy: IfNotPresent
          args:
            - --storage_system=mysql
            - --quota_system=mysql
            - --mysql_uri={{ tas_single_node_trillian.mysql.user }}:{{ tas_single_node_trillian.mysql.password }}@tcp({{ tas_single_node_trillian.mysql.host }}:{{ tas_single_node_trillian.mysql.port }})/{{ tas_single_node_trillian.mysql.database }}
            - --rpc_endpoint=0.0.0.0:8091
            - --http_endpoint=0.0.0.0:8090
            - --alsologtostderr
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  key: mysql-user
                  name: trillian-mysql
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: mysql-password
                  name: trillian-mysql
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  key: mysql-database
                  name: trillian-mysql
            - name: MYSQL_HOSTNAME
              value: "{{ tas_single_node_trillian.mysql.host }}"
            - name: MYSQL_PORT
              value: "{{ tas_single_node_trillian.mysql.port | quote }}"
          ports:
            - containerPort: 8091
              protocol: TCP
            - containerPort: 8090
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      initContainers:
        - name: wait-for-trillian-db
          image: "{{ tas_single_node_netcat_image }}"
          imagePullPolicy: IfNotPresent
          command: ["sh", "-c", "until nc -z -w 10 trillian-mysql-pod 3306; do echo waiting for trillian-mysql; sleep 5; done;"]
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      nodeName: minikube
      nodeSelector:
        kubernetes.io/arch: arm64
      preemptionPolicy: PreemptLowerPriority
      priority: 0
      # Needs to be set until https://github.com/containers/podman/pull/16698 is downsteamed
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: trillian-logserver
      serviceAccountName: trillian-logserver
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300

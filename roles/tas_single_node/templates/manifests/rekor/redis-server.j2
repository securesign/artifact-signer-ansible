apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ tas_single_node_rekor_redis_pod }}"
  namespace: rekor-system
  labels:
    app.podman.io/component: rekor-redis
    app.podman.io/part-of: trusted-artifact-signer
    app.name: rekor-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app.name: rekor-redis
  template:
    metadata:
      labels:
        app: rekor-redis
        app.podman.io/component: rekor-redis
        app.podman.io/part-of: trusted-artifact-signer
        app.name: rekor-redis
    spec:
      containers:
        - name: rekor-redis
          image: "{{ tas_single_node_rekor_redis_image }}"
{% if tas_single_node_rekor_redis.redis.password != "" %}
          env:
            - name: REDIS_PASSWORD
              value: "{{ tas_single_node_rekor_redis.redis.password }}"
{% endif %}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: {{ tas_single_node_rekor_redis_port_tcp }}
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-c'
                - '-i'
                - test $(redis-cli -h 127.0.0.1 ping) = 'PONG'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      enableServiceLinks: true
      securityContext:
        capabilities:
          drop:
            - ALL
        runAsUser: 65533
        runAsNonRoot: true
        allowPrivilegeEscalation: false
      serviceAccountName: rekor-redis
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300

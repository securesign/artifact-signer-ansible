apiVersion: apps/v1
kind: Deployment
metadata:
  name: tuf
  namespace: tuf-system
  labels:
    app.kubernetes.io/component: tuf
    app.kubernetes.io/instance: scaffold
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: tuf
    helm.sh/chart: tuf-0.1.4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tuf
  template:
    metadata:
      labels:
        app: tuf
        app.kubernetes.io/component: tuf
        app.kubernetes.io/instance: scaffold
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: tuf
        helm.sh/chart: tuf-0.1.4
    spec:
      containers:
        - name: tuf
          image: "{{ tas_single_node_tuf_image }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8082
              protocol: TCP
              hostPart: 8082
          env:
            - name: NAMESPACE
              value: tuf-system
          args: ["-no-k8s"]
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/run/tuf-secrets
              name: tuf-secrets
              readOnly: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      securityContext: {}
      serviceAccountName: tuf
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
        - name: tuf-secrets
          secret:
            secretName: tuf-secret

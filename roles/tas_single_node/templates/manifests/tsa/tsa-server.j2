apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ tas_single_node_tsa_server_pod }}"
  namespace: tsa-system
  labels:
    app.podman.io/part-of: trusted-artifact-signer
    app.name: tsa-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tsa-server
  template:
    metadata:
      labels:
        app: tsa-server
        app.podman.io/part-of: trusted-artifact-signer
        app.name: tsa-server
    spec:
      automountServiceAccountToken: true
      containers:
        - name: tsa-server
          readinessProbe:
            httpGet:
              path: /ping
              port: {{ tas_single_node_tsa_server_port_tcp }}
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /ping
              port: {{ tas_single_node_tsa_server_port_tcp }}
              scheme: HTTP
            initialDelayDeconds: 10
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          image: {{ tas_single_node_timestamp_authority_image }}
          imagePullPolicy: IfNotPresent
{% if tas_single_node_tsa.trusted_ca != '' or tas_single_node_tsa.signer_type in ['kms', 'tink'] or tas_single_node_tsa.env | length > 0 %}
          env:
{% if tas_single_node_tsa.trusted_ca != '' %}
            - name: SSL_CERT_DIR
              value: "/var/run/configs/tas/ca-trust"
{% endif %}
{% if tas_single_node_tsa.signer_type in ['kms', 'tink'] or tas_single_node_tsa.env | length > 0 %}
{% for var in tas_single_node_tsa.env %}
            - name: {{ var.name }}
              value: "{{ var.value }}"
{% endfor %}
{% endif %}
{% endif %}
          command:
            - "timestamp-server"
          args:
            - "serve"
            - "--host=0.0.0.0"
            - "--port={{ tas_single_node_tsa_server_port_tcp }}"
            - "--certificate-chain-path=/etc/secrets/cert_chain/certificate-chain.pem"
            - "--timestamp-signer={{ tas_single_node_tsa.signer_type }}"
{% if tas_single_node_tsa.ntp_config != '' %}
            - "--ntp-monitoring=/etc/config/ntpsync.yaml"
{% endif %}
{% if tas_single_node_tsa.signer_type == 'file' %}
            - "--file-signer-key-path=/etc/secrets/keys/private_key.pem"
            - "--file-signer-passwd={{ tas_single_node_tsa.ca_passphrase }}"
{% endif %}
{% if tas_single_node_tsa.signer_type == 'kms' %}
            - "--kms-key-resource={{ tas_single_node_tsa.kms.key_resource }}"
{% endif %}
{% if tas_single_node_tsa.signer_type == 'tink' %}
            - "--tink-key-resource={{ tas_single_node_tsa.tink.key_resource }}"
            - "--tink-keyset-path=/etc/secrets/keys/encrypted_key_set"
            - "--tink-hcvault-token={{ tas_single_node_tsa.tink.hcvault_token }}"
{% endif %}
          ports:
            - containerPort: {{ tas_single_node_tsa_server_port_tcp }}
              protocol: TCP
          resources: {}
          volumeMounts:
{% if tas_single_node_tsa.trusted_ca != '' %}
            - name: ca-trust
              mountPath: /var/run/configs/tas/ca-trust/tsa-trusted-ca.pem
              subPath: tsa-trusted-ca.pem
{% endif %}
{% if tas_single_node_tsa.ntp_config != '' %}
            - name: tsa-ntp-config
              mountPath: /etc/config/ntpsync.yaml
              subPath: ntpsync.yaml
{% endif %}
            - name: tsa-cert-chain
              mountPath: /etc/secrets/cert_chain
              readOnly: true
{% if tas_single_node_tsa.signer_type == 'file' %}
            - name: tsa-file-signer-config
              mountPath: /etc/secrets/keys
              readOnly: true
{% endif %}
{% if tas_single_node_tsa.signer_type == 'tink' %}
            - name: tsa-file-signer-config
              mountPath: /etc/secrets/keys
              readOnly: true
{% endif %}
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      securityContext:
        runAsNonRoot: true
        runAsUser: 65533
      serviceAccountName: tsa-server
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 300
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 300
      volumes:
{% if tas_single_node_tsa.trusted_ca != '' %}
        - name: ca-trust
          configMap:
            name: tsa-config
            items:
              - key: tsa-trusted-ca.pem
                path: tsa-trusted-ca.pem
{% endif %}
{% if tas_single_node_tsa.ntp_config != '' %}
        - name: tsa-ntp-config
          configMap:
            defaultMode: 420
            name: tsa-config
            items:
              - key: ntpsync.yaml
                path: ntpsync.yaml
{% endif %}
        - name: tsa-cert-chain
          secret:
            secretName: tsa-server-secret
            items:
              - key: certificate-chain.pem
                path: certificate-chain.pem
{% if tas_single_node_tsa.signer_type == 'file' %}
        - name: tsa-file-signer-config
          secret:
            secretName: tsa-server-secret
            items:
              - key: private_key.pem
                path: private_key.pem
{% endif %}
{% if tas_single_node_tsa.signer_type == 'tink' %}
        - name: tsa-file-signer-config
          secret:
            secretName: tsa-server-secret
            items:
              - key: encrypted_key_set
                path: encrypted_key_set
{% endif %}

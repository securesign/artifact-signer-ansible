argument_specs:
  main:
    short_description: "Configure Red Hat Trusted Artifact Signer (RHTAS) on a single managed node."
    description: >
      Deploy the [RHTAS](https://docs.redhat.com/en/documentation/red_hat_trusted_artifact_signer) service
      on a single managed node by using the `tas_single_node` role.
    version_added: "1.1.0"
    options:
      tas_single_node_registry_username:
        description: "The user name logging in to the registry to pull images."
        type: "str"
        required: true
        version_added: "1.1.0"
        # we provide no default value here intentionally
      tas_single_node_registry_password:
        description: "The user's password to log in to the registry."
        type: "str"
        required: true
        version_added: "1.1.0"
        # we provide no default value here intentionally
      tas_single_node_podman_network:
        description: "Name of the Podman network for containers to use."
        type: "str"
        required: false
        version_added: "1.1.0"
        default: "rhtas"
      tas_single_node_rekor_redis:
        description: "Details on the Redis connection for Rekor. You can set this to a custom Redis instance."
        type: "dict"
        required: false
        version_added: "1.1.0"
        default:
          database_deploy: true
          redis:
            host: rekor-redis-pod
            port: 6379
            password: password
        options:
          database_deploy:
            description: "Whether or not to deploy Redis."
            type: "bool"
            required: false
            version_added: "1.1.0"
          redis:
            description: "Details on the Redis connection."
            type: "dict"
            required: false
            version_added: "1.1.0"
            options:
              host:
                description: "The Redis host."
                type: "str"
                required: false
                version_added: "1.1.0"
              port:
                description: "The Redis host port number."
                type: "int"
                required: false
                version_added: "1.1.0"
              password:
                description: "The Redis password."
                type: "str"
                required: false
                version_added: "1.1.0"
      tas_single_node_backfill_redis:
        description: "Configuration options for the backfill redis job."
        type: "dict"
        required: false
        version_added: "1.2.0"
        default:
          enabled: true
          schedule: "*-*-* 00:00:00"
        options:
          enabled:
            description: "Enable or disable the backfill redis job."
            type: "bool"
            required: false
            version_added: "1.2.0"
          schedule:
            description: "Schedule the backfill redis job should follow."
            type: "str"
            required: false
            version_added: "1.2.0"
      tas_single_node_trillian:
        description: >
          Details on the configuration options for Trillian. Includes user provided database config, and trusted Certificate Authority.
          You can set this to a custom MySQL or MariaDB instance.
        type: "dict"
        required: false
        version_added: "1.1.0"
        default:
          database_deploy: true
          mysql:
            user: mysql
            root_password: rootpassword
            password: password
            database: trillian
            host: trillian-mysql-pod
            port: 3306
          trusted_ca: ""
        options:
          database_deploy:
            description: "Whether or not to deploy the database."
            type: "bool"
            required: false
            version_added: "1.1.0"
          mysql:
            description: "Details on the database connection."
            type: "dict"
            required: false
            version_added: "1.1.0"
            options:
              host:
                description: "The database host."
                type: "str"
                required: false
                version_added: "1.1.0"
              port:
                description: "The database host port number."
                type: "int"
                required: false
                version_added: "1.1.0"
              password:
                description: "The database password."
                type: "str"
                required: false
                version_added: "1.1.0"
              user:
                description: "The database user."
                type: "str"
                required: false
                version_added: "1.1.0"
              root_password:
                description: "The root password for the database."
                type: "str"
                required: false
                version_added: "1.1.0"
              database:
                description: "The database name to connect to."
                type: "str"
                required: false
                version_added: "1.1.0"
          trusted_ca:
            description: >
              Trusted CA certificate for Trillian, enabling secure TLS connections between the Trillian Logserver/Logsigner and the Trillian database.
              This CA certificate validates the authenticity of the Trillian database, ensuring encrypted and trusted data exchanges.
            type: "str"
            required: false
            version_added: "1.2.0"
      tas_single_node_ingress_certificates:
        description: "Details on the certificate settings for various services in the ingress layer.
          Includes user-provided certificates and private keys for fulcio, rekor, TUF, TSA, rekor-search, and cli-server."
        type: "dict"
        required: false
        version_added: "1.2.0"
        default:
          fulcio:
            certificate: ""
            private_key: ""
          rekor:
            certificate: ""
            private_key: ""
          tuf:
            certificate: ""
            private_key: ""
          tsa:
            certificate: ""
            private_key: ""
          rekor-search:
            certificate: ""
            private_key: ""
          cli-server:
            certificate: ""
            private_key: ""
        options:
          fulcio:
            description: "Certificate details for the fulcio service."
            type: "dict"
            required: false
            version_added: "1.2.0"
            options:
              certificate:
                description: "The user-provided certificate for fulcio."
                type: "str"
                required: false
                version_added: "1.2.0"
              private_key:
                description: "The user-provided private key for fulcio."
                type: "str"
                required: false
                version_added: "1.2.0"
          rekor:
            description: "Certificate details for the rekor service."
            type: "dict"
            required: false
            version_added: "1.2.0"
            options:
              certificate:
                description: "The user-provided certificate for rekor."
                type: "str"
                required: false
                version_added: "1.2.0"
              private_key:
                description: "The user-provided private key for rekor."
                type: "str"
                required: false
                version_added: "1.2.0"
          tuf:
            description: "Certificate details for the TUF service."
            type: "dict"
            required: false
            version_added: "1.2.0"
            options:
              certificate:
                description: "The user-provided certificate for TUF."
                type: "str"
                required: false
                version_added: "1.2.0"
              private_key:
                description: "The user-provided private key for TUF."
                type: "str"
                required: false
                version_added: "1.2.0"
          tsa:
            description: "Certificate details for the TSA service."
            type: "dict"
            required: false
            version_added: "1.2.0"
            options:
              certificate:
                description: "The user-provided certificate for TSA."
                type: "str"
                required: false
                version_added: "1.2.0"
              private_key:
                description: "The user-provided private key for TSA."
                type: "str"
                required: false
                version_added: "1.2.0"
          rekor-search:
            description: "Certificate details for the rekor-search service."
            type: "dict"
            required: false
            version_added: "1.2.0"
            options:
              certificate:
                description: "The user-provided certificate for rekor-search."
                type: "str"
                required: false
                version_added: "1.2.0"
              private_key:
                description: "The user-provided private key for rekor-search."
                type: "str"
                required: false
                version_added: "1.2.0"
          cli-server:
            description: "Certificate details for the cli-server service."
            type: "dict"
            required: false
            version_added: "1.2.0"
            options:
              certificate:
                description: "The user-provided certificate for cli-server."
                type: "str"
                required: false
                version_added: "1.2.0"
              private_key:
                description: "The user-provided private key for cli-server."
                type: "str"
                required: false
                version_added: "1.2.0"
      tas_single_node_fulcio:
        description: "Details on the certificate settings for Fulcio. Includes organizational details,
          the user-provided private key for signing the root certificate, and the user-provided root certificate itself.
          **Note**: Updating any of the certificate attributes (such as `organization_name`, `organization_email`, or `common_name`)
          or the Certificate Authority passphrase (`ca_passphrase`) key will regenerate the Fulcio certificate,
          which requires a corresponding manual update in the trust root."
        type: "dict"
        required: false
        version_added: "1.2.0"
        default:
          certificate:
            organization_name: ""
            organization_email: ""
            common_name: ""
          private_key: ""
          root_ca: ""
          trusted_ca: ""
          ca_passphrase: rhtas
          ct_log_prefix: rhtasansible
          fulcio_config:
            oidc_issuers: []
            meta_issuers: []
        options:
          certificate:
            description: "Details on the certificate attributes for Fulcio.
              **Note**: Updating any of these values will regenerate the Fulcio certificate, and a manual update in the trust root is required."
            type: "dict"
            required: false
            version_added: "1.2.0"
            options:
              organization_name:
                description: "The name of the organization."
                type: "str"
                required: false
                version_added: "1.2.0"
              organization_email:
                description: "The email address of the organization."
                type: "str"
                required: false
                version_added: "1.2.0"
              common_name:
                description: "The common name (e.g., hostname) for the certificate."
                type: "str"
                required: false
                version_added: "1.2.0"
          private_key:
            description: "The user-provided private key for Fulcio,
              used for signing root certificate (only RSA with > 2048 B pkey size or ECC with prime256v1 (==secp256r1) are supported)."
            type: "str"
            required: false
            version_added: "1.2.0"
          root_ca:
            description: "The user-provided root certificate for Fulcio. This field is mutually exclusive with the certificate field."
            type: "str"
            required: false
            version_added: "1.2.0"
          trusted_ca:
            description: >
              Trusted OpenID Connect (OIDC) CA certificate for Fulcio, used to validate the identity of the OIDC provider.
            type: "str"
            required: false
            version_added: "1.2.0"
          ca_passphrase:
            description: >
              "Passphrase for Certificate Authority.
              **Note**: Updating the passphrase will regenerate the auto-generated private key and the Fulcio certificate as a consequence,
              and a manual update in the trust root is required."
            type: "str"
            required: false
            version_added: "1.2.0"
          ct_log_prefix:
            description: >
              The Prefix for the Certificate Transparency Log that is accessed by Fulcio.
            type: "str"
            required: false
            version_added: "1.1.0"
          fulcio_config:
            description: >
              Fulcio configuration for the OIDC issuers and meta issuers.
            type: "dict"
            required: true
            version_added: "1.2.0"
            options:
              oidc_issuers:
                description: "The list of OpenID Connect (OIDC) issuers allowed to authenticate Fulcio certificate requests."
                type: "list"
                elements: "dict"
                required: false
                version_added: "1.1.0"
                # we provide no default here intentionally
                options:
                  issuer:
                    description: "A unique name of the OIDC issuer."
                    type: "str"
                    required: true
                    version_added: "1.1.0"
                  url:
                    description: "The OIDC issuer service URL."
                    type: "str"
                    required: true
                    version_added: "1.1.0"
                  client_id:
                    description: "The OIDC client identifier used by the RHTAS service."
                    type: "str"
                    required: true
                    version_added: "1.1.0"
                  type:
                    description: "The type of the OIDC token issuer, for example, 'email'."
                    type: "str"
                    required: true
                    version_added: "1.1.0"
              meta_issuers:
                description: "The list of OIDC meta issuers allowed to authenticate Fulcio certificate requests."
                type: "list"
                elements: "dict"
                required: false
                version_added: "1.1.0"
                options:
                  issuer_pattern:
                    description: "A URL template to match multiple OIDC issuers, for example, `'https://oidc.eks.*.amazonaws.com/id/*'`."
                    type: "str"
                    required: true
                    version_added: "1.1.0"
                  client_id:
                    description: "The OIDC client identifier used by the RHTAS service."
                    type: "str"
                    required: true
                    version_added: "1.1.0"
                  type:
                    description: "The type of the OIDC token issuer, for example, 'email'."
                    type: "str"
                    required: true
                    version_added: "1.1.0"
      tas_single_node_rekor:
        description: >
          Details on the Rekor server configuration options. Includes Certificate Authority Passphrase,
          public key retries, public key delay and more.
        type: dict
        required: false
        version_added: "1.2.0"
        options:
          active_signer_type:
            description: "Active logs signer type can be either file, KMS or tink"
            type: "str"
            required: false
            version_added: "1.2.0"
          active_signer_id:
            description: "ID of the key name containing the active signer key for rekor to use."
            type: "str"
            required: false
            version_added: "1.2.0"
          active_tree_id:
            description: "Tree Id of active rekor log."
            type: "int"
            required: false
            version_added: "1.2.0"
          kms:
            description: "Details for KMS configuration of rekor cli-server."
            type: "dict"
            options:
              kms_resource:
                description: "KMS resource access"
                type: "str"
                required: false
                version_added: "1.2.0"
          tink:
            description: "Details for tink configuration within rekor-server."
            type: "dict"
            options:
              tink_kek_uri:
                description: "URI for tink resource."
                type: "str"
                required: false
                version_added: "1.2.0"
              tink_keyset_path:
                description: "Keyset to be unencrypted by tink."
                type: "str"
                required: false
                version_added: "1.2.0"
          env:
            description: "Env vars to be specified to access AWS Cloud keys."
            type: "list"
            elements: "dict"
            required: false
            version_added: "1.2.0"
          ca_passphrase:
            description: "Passphrase used for Certificate Authority cert."
            type: "str"
            required: false
            version_added: "1.1.0"
          public_key_retries:
            description: "The number of attempts to retrieve the Rekor public key when constructing the trust root."
            type: "int"
            required: false
            version_added: "1.1.0"
          public_key_delay:
            description: "The number of seconds to wait before retrying the retrieval of the Rekor public key when constructing the trust root."
            type: "int"
            required: false
            version_added: "1.1.0"
          private_keys:
            description: "List of private keys for use within rekor."
            type: "list"
            elements: "dict"
            options:
              id:
                description: "Custom rekor secret ID."
                type: "str"
                required: false
                version_added: "1.2.0"
              key:
                description: "Custom Rekor Private key value."
                type: "str"
                required: false
                version_added: "1.2.0"
            required: false
            version_added: "1.2.0"
          public_keys:
            description: "List of public keys for use within rekor."
            type: "list"
            elements: "dict"
            options:
              id:
                description: "Custom rekor secret ID."
                type: "str"
                required: false
                version_added: "1.2.0"
              key:
                description: "Custom Rekor Public key value."
                type: "str"
                required: false
                version_added: "1.2.0"
            required: false
            version_added: "1.2.0"
          sharding_config:
            description: "Sharding configuration for rekor"
            type: "list"
            elements: "dict"
            options:
              tree_id:
                description: "Sharding configuration treeID"
                type: "int"
                required: false
                version_added: "1.2.0"
              tree_length:
                description: "Length of rekor tree."
                type: "str"
                required: false
                version_added: "1.2.0"
              signing_config:
                description: "Signing Configuration or rekor shard."
                type: "str"
                required: false
                version_added: "1.2.0"
              pem_pub_key:
                description: "ID of custom key provided to rekor."
                type: "str"
                required: false
                version_added: "1.2.0"
            required: false
            version_added: "1.2.0"
      tas_single_node_setup_host_dns:
        description: "Set up DNS on the managed host to resolve URLs of the configured RHTAS services."
        type: "bool"
        required: false
        version_added: "1.1.0"
        default: true
      tas_single_node_base_hostname:
        description: >
          The base host name of the managed node.
          This generates self-signed certificates for the individual HTTPS endpoints.
        type: "str"
        required: true
        version_added: "1.1.0"
        # we provide no default value here intentionally
      tas_single_node_ctlog:
        description: >
          Configuration and specification of ctlog Custom Configuration as well as custom keys.
        type: "dict"
        version_added: "1.2.0"
        required: false
        default:
          ca_passphrase: rhtas
          sharding_config:
            - config:
              treeid:
              prefix: ""
              root_pem_file: ""
              password: ""
              private_key: ""
          private_keys: []
          public_keys: []
        options:
          ca_passphrase:
            description: "Passphrase used for Certificate Authority."
            required: false
            version_added: "1.2.0"
          sharding_config:
            description: "Configuration for each log in ctlog."
            required: false
            version_added: "1.2.0"
            options:
              treeid:
                description: "Trillian Tree Id ctlog use."
                type: "int"
                required: false
                version_added: "1.2.0"
              prefix:
                description: "ctlog log Prefix."
                type: "str"
                required: false
                version_added: "1.2.0"
              root_pem_file:
                description: "File path to root Pem file."
                type: "str"
                required: false
                version_added: "1.2.0"
              password:
                description: "Password for private key used by ctlog."
                type: "str"
                required: false
                version_added: "1.2.0"
              private_key:
                description: "Name of the private key in the system."
                type: "str"
                required: false
                version_added: "1.2.0"
              override_handler_prefix:
                description: "Overrides the handler prefix for this log."
                type: "str"
                required: false
                version_added: "1.2.0"
              public_key:
                description: "Public key used for verification (must be in DER format)."
                type: "str"
                required: false
                version_added: "1.2.0"
              reject_expired:
                description: "Reject certificates that are expired."
                type: "bool"
                required: false
                version_added: "1.2.0"
              reject_unexpired:
                description: "Reject certificates that are not expired."
                type: "bool"
                required: false
                version_added: "1.2.0"
              not_after_start:
                description: "Starting timestamp for valid 'NotAfter' dates."
                type: "dict"
                options:
                  seconds:
                    description: "Seconds portion of the timestamp."
                    type: "int"
                  nanos:
                    description: "Nanoseconds portion of the timestamp."
                    type: "int"
                required: false
                version_added: "1.2.0"
              not_after_limit:
                description: "Ending timestamp for valid 'NotAfter' dates."
                type: "dict"
                options:
                  seconds:
                    description: "Seconds portion of the timestamp."
                    type: "int"
                  nanos:
                    description: "Nanoseconds portion of the timestamp."
                    type: "int"
                required: false
                version_added: "1.2.0"
              accept_only_ca:
                description: "Only accept certificates with CA extension."
                type: "bool"
                required: false
                version_added: "1.2.0"
              is_mirror:
                description: "Indicates whether the log is a mirror log."
                type: "bool"
                required: false
                version_added: "1.2.0"
              is_readonly:
                description: "Indicates whether the log is read-only."
                type: "bool"
                required: false
                version_added: "1.2.0"
              max_merge_delay_sec:
                description: "Maximum merge delay in seconds."
                type: "int"
                required: false
                version_added: "1.2.0"
              expected_merge_delay_sec:
                description: "Expected merge delay in seconds."
                type: "int"
                required: false
                version_added: "1.2.0"
              frozen_sth:
                description: "Signed Tree Head (STH) that freezes the log."
                type: "dict"
                required: false
                version_added: "1.2.0"
              reject_extensions:
                description: "List of rejected certificate extensions."
                type: "str"
                required: false
                version_added: "1.2.0"
              ctfe_storage_connection_string:
                description: "Storage connection string for CTFE."
                type: "str"
                required: false
                version_added: "1.2.0"
              extra_data_issuance_chain_storage_backend:
                description: "Storage backend for extra data issuance chain."
                type: "int"
                required: false
                version_added: "1.2.0"
          private_keys:
            description: "List of private keys for use within ctlog."
            type: "list"
            elements: "dict"
            options:
              id:
                description: "Custom ctlog secret ID."
                type: "str"
                required: false
                version_added: "1.2.0"
              key:
                description: "Custom ctlog Private key value."
                type: "str"
                required: false
                version_added: "1.2.0"
          public_keys:
            description: "List of public keys for use within ctlog."
            type: "list"
            elements: "dict"
            options:
              id:
                description: "Custom ctlog secret ID."
                type: "str"
                required: false
                version_added: "1.2.0"
              key:
                description: "Custom ctlog Public key value."
                type: "str"
                required: false
                version_added: "1.2.0"

      tas_single_node_tsa:
        description: >
          Details on the certificate and configuration options for Timestamp Authority. Includes organizational details,
          the different signer types such as `file`, `kms`, and `tink`, NTP monitoring configuration and user provided certificate chain + signer private key.
        type: "dict"
        version_added: "1.2.0"
        required: false
        default:
          env: []
          signer_type: file
          certificate:
            organization_name: ""
            organization_email: ""
            common_name: ""
          kms:
            key_resource: ""
          tink:
            key_resource: ""
            keyset: ""
            hcvault_token: ""
          signer_private_key: ""
          certificate_chain: ""
          ca_passphrase: rhtas
          ntp_config: ""
          trusted_ca: ""
        options:
          signer_type:
            description: "The signer type for TSA. Options include `file`, `kms`, `tink`."
            type: "str"
            required: false
            version_added: "1.2.0"
          certificate:
            description: "Details on the certificate attributes for TSA. **Note**: Updating any of the certificate attributes (such as `organization_name`,
                          `organization_email`, or `common_name`) or the Certificate Authority passphrase (`ca_passphrase`) key will regenerate the TSA
                          certificate, which requires a corresponding manual update in the trust root."
            type: "dict"
            required: false
            version_added: "1.2.0"
            options:
              organization_name:
                description: "The name of the organization."
                type: "str"
                required: false
                version_added: "1.2.0"
              organization_email:
                description: "The email of the organization."
                type: "str"
                required: false
                version_added: "1.2.0"
              common_name:
                description: "The common name (e.g., hostname) for the certificate."
                type: "str"
                required: false
                version_added: "1.2.0"
          kms:
            description: >
              The Key Management Services (KMS) key for signing timestamp responses.
              Valid options are: [gcp-kms://resource, aws-kms://resource, hcvault://].
            type: "str"
            required: false
            version_added: "1.2.0"
            options:
              key_resource:
                description: "Key resource used to access signer private key from AWS/GCP/Azure."
                type: "str"
                required: false
                version_added: "1.2.0"
          tink:
            description: "Tink file signer type configuration for TSA."
            type: "str"
            required: false
            version_added: "1.2.0"
            options:
              key_resource:
                description: >
                  The KMS key for signing timestamp responses for Tink keysets.
                  Valid options are: [gcp-kms://resource, aws-kms://resource, hcvault://].
                type: "str"
                required: false
                version_added: "1.2.0"
              keyset:
                description: "The KMS-encrypted keyset for Tink that decrypts the tas_single_node_tsa_tink_key_resource string."
                type: "str"
                required: false
                version_added: "1.2.0"
              hcvault_token:
                description: "The authentication token for Hashicorp Vault API calls."
                type: "str"
                required: false
                version_added: "1.2.0"
          signer_private_key:
            description: "Signer private key used in conjuction with the certificate chain for signing and verifying."
            type: "str"
            required: false
            version_added: "1.2.0"
          certificate_chain:
            description: "Certificate chain used in conjuction with the signer private key for signing and verifying."
            type: "str"
            required: false
            version_added: "1.2.0"
          ca_passphrase:
            description: >
              Passphrase for Certificate Authority.
              **Note**: Updating the passphrase will regenerate the auto-generated private key and the TSA certificate as a consequence,
              and a manual update in the trust root is required."
            type: "str"
            required: false
            version_added: "1.2.0"
          ntp_config:
            description: >
              NTP config for time syncing within a unified consensus of vendors such as Google, Amazon, and more.
              Valid file format and configuration can be found [here](https://github.com/sigstore/timestamp-authority/blob/main/pkg/ntpmonitor/ntpsync.yaml).
            type: "str"
            required: false
            version_added: "1.2.0"
          trusted_ca:
            description: >
              Trusted CA certificate for Trusted Timestamp Authority, enabling secure TLS connections.
              Used to ensure authenticity and trusted data exchange.
            type: "str"
            required: false
            version_added: "1.2.0"
          env:
            description: "Environment vars to be specified to access AWS Cloud keys when using Tink or KMS"
            type: "list"
            elements: "dict"
            required: false
            version_added: "1.2.0"
      tas_single_node_skip_os_install:
        description: >
          Whether or not to skip the installation of the required operating system packages.
          Only use this option when all packages are already installed at the versions released for RHEL 9.4 or later.
        type: "bool"
        required: false
        version_added: "1.1.0"
        default: false
      tas_single_node_fulcio_server_image:
        description: "Fulcio image"
        type: "str"
        required: false
        version_added: "1.1.0"
        default: "registry.redhat.io/rhtas/fulcio-rhel9@sha256:67495de82e2fcd2ab4ad0e53442884c392da1aa3f5dd56d9488a1ed5df97f513"
      tas_single_node_trillian_log_server_image:
        description: "Trillian log server image"
        type: "str"
        required: false
        version_added: "1.1.0"
        default: "registry.redhat.io/rhtas/trillian-logserver-rhel9@sha256:994a860e569f2200211b01f9919de11d14b86c669230184c4997f3d875c79208"
      tas_single_node_logsigner_image:
        description: "Trillian logsigner image"
        type: "str"
        required: false
        version_added: "1.1.0"
        default: "registry.redhat.io/rhtas/trillian-logsigner-rhel9@sha256:37028258a88bba4dfaadb59fc88b6efe9c119a808e212ad5214d65072abb29d0"
      tas_single_node_rekor_image:
        description: "Rekor image"
        type: "str"
        required: false
        version_added: "1.1.0"
        default: "registry.redhat.io/rhtas/rekor-server-rhel9@sha256:133ee0153e12e6562cfea1a74914ebdd7ee76ae131ec7ca0c3e674c2848150ae"
      tas_single_node_ct_server_image:
        description: "ctlog image"
        type: "str"
        required: false
        version_added: "1.1.0"
        default: "registry.redhat.io/rhtas/certificate-transparency-rhel9@sha256:a0c7d71fc8f4cb7530169a6b54dc3a67215c4058a45f84b87bb04fc62e6e8141"
      tas_single_node_redis_image:
        description: "Redis image"
        type: "str"
        required: false
        version_added: "1.1.0"
        default: "registry.redhat.io/rhtas/trillian-redis-rhel9@sha256:01736bdd96acbc646334a1109409862210e5273394c35fb244f21a143af9f83e"
      tas_single_node_trillian_db_image:
        description: "Trillian database image"
        type: "str"
        required: false
        version_added: "1.1.0"
        default: "registry.redhat.io/rhtas/trillian-database-rhel9@sha256:909f584804245f8a9e05ecc4d6874c26d56c0d742ba793c1a4357a14f5e67eb0"
      tas_single_node_tuf_image:
        description: "TUF server image"
        type: "str"
        required: false
        version_added: "1.1.0"
        default: "registry.redhat.io/rhtas/tuf-server-rhel9@sha256:34f5cdc53a908ae2819d85ab18e35b69dc4efc135d747dd1d2e216a99a2dcd1b"
      tas_single_node_netcat_image:
        description: "Netcat image"
        type: "str"
        required: false
        version_added: "1.1.0"
        default: "registry.redhat.io/openshift4/ose-tools-rhel8@sha256:486b4d2dd0d10c5ef0212714c94334e04fe8a3d36cf619881986201a50f123c7"
      tas_single_node_nginx_image:
        description: "Nginx image"
        type: "str"
        required: false
        version_added: "1.1.0"
        default: "registry.redhat.io/rhel9/nginx-124@sha256:71fc4492c3a632663c1e17ec9364d87aa7bd459d3c723277b8b94a949b84c9fe"
      tas_single_node_tsa_image:
        description: "Timestamp Authority Image"
        type: "str"
        required: false
        version_added: "1.1.0"
        default: "registry.redhat.io/rhtas/timestamp-authority-rhel9@sha256:3fba2f8cd09548d2bd2dfff938529952999cb28ff5b7ea42c1c5e722b8eb827f"
      tas_single_node_rekor_search_image:
        description: "Rekor search UI image"
        type: "str"
        required: false
        version_added: "1.1.0"
        default: "registry.redhat.io/rhtas/rekor-search-ui-rhel9@sha256:8c478fc6122377c6c9df0fddf0ae42b6f6b1648e3c6cf96a0558f366e7921b2b"
      tas_single_node_podman:
        description: "Configuration options for Podman."
        type: "dict"
        required: false
        version_added: "1.2.0"
        options:
          policy:
            description: >
              Contains the content of a `policy.json` file, which defines security policies for container image sources.
              Replaces the default policy, allowing you to enforce specific rules for image trust and verification in Podman.
            type: "str"
            required: false
            version_added: "1.2.0"
          registry:
            description: >
              A list of registries and their corresponding mirrors. Each item in the list should specify
              a registry location and a mirror to use for pulling images.
            type: "list"
            elements: "dict"
            required: false
            version_added: "1.2.0"
            options:
              location:
                description: "The primary registry location for the image."
                type: "str"
                required: true
                version_added: "1.2.0"
              mirror:
                description: "The mirror registry to use for pulling images from the primary registry location."
                type: "str"
                required: true
                version_added: "1.2.0"
      tas_single_node_cockpit:
        description: "Configuration options for Cockpit."
        type: "dict"
        required: false
        version_added: "1.2.0"
        default:
          enabled: false
          user:
            create: false
            username: cockpit-user
        options:
          enabled:
            description: "Whether or not to install Cockpit."
            type: "bool"
            required: false
            version_added: "1.2.0"
          user:
            description: "Configuration for the cockpit user."
            type: "dict"
            required: false
            version_added: "1.2.0"
            options:
              create:
                description: "Whether or not to create the cockpit user."
                type: "bool"
                required: false
                version_added: "1.2.0"
              username:
                description: "Username for the cockpit user."
                type: "str"
                required: false
                version_added: "1.2.0"
              password:
                description: "Password for the cockpit user."
                type: "str"
                required: false
                version_added: "1.2.0"
      tas_single_node_podman_volume_create_extra_args:
        description: >
          A dictionary of additional arguments to pass to the `podman volume create`
          command for each volume. This allows customization of options when creating
          specific volumes. Each key in the dictionary corresponds to a volume name
          with hyphens replaced by underscores.
        type: "dict"
        required: false
        version_added: "1.2.0"
        default:
          trillian_mysql: ""
          rekor_redis_storage: ""
          redis_backfill_storage: ""
          rekor_server: ""
          tuf_repository: ""
          tuf_signing_keys: ""
        options:
          trillian_mysql:
            description: >
              Additional arguments to pass when creating the "trillian-mysql" volume.
            type: "str"
            required: false
            version_added: "1.2.0"
          rekor_redis_storage:
            description: >
              Additional arguments to pass when creating the "rekor-redis-storage" volume.
            type: "str"
            required: false
            version_added: "1.2.0"
          redis_backfill_storage:
            description: >
              Additional arguments to pass when creating the "redis-backfill-storage" volume.
            type: "str"
            required: false
            version_added: "1.2.0"
          rekor_server:
            description: >
              Additional arguments to pass when creating the "rekor-server" volume.
            type: "str"
            required: false
            version_added: "1.2.0"
          tuf_repository:
            description: >
              Additional arguments to pass when creating the "tuf-repository" volume.
            type: "str"
            required: false
            version_added: "1.2.0"
          tuf_signing_keys:
            description: >
              Additional arguments to pass when creating the "tuf-signing-keys" volume.
            type: "str"
            required: false
            version_added: "1.2.0"
      tas_single_node_trust_root:
        description: "Configuration options for the Trust Root."
        type: "dict"
        required: false
        version_added: "1.2.0"
        default:
          full_archive: ""
        options:
          full_archive:
            description: >
              A compressed base64-encoded .tgz file of the trust root. This archive file has a single directory
              named `tuf-repo/`, containing the contents of the TUF repository, for example `1.root.json`.
              The default value is an empty string. Using the default value generates the trust root content,
              unless a trust root already exists. Specifying a `full_archive` string removes any earlier configured
              trust root content, and starts to use the new specified content. If changing this value back
              to an empty string after setting the `full_archive` option, then we continue serving the previous
              value for the trust root content. To reset the trust root content, you must remove all files
              in the volume associated with the `tuf-repository` pod.
            type: str
            required: false
            version_added: "1.2.0"
      tas_single_node_backup_restore:
        description: "Configuration options for the Backup and Restore of Trusted Artifact Signer."
        type: "dict"
        required: false
        version_added: "1.2.0"
        default:
          backup:
            enabled: false
            schedule: "*-*-* 00:00:00"
            force_run: false
            passphrase: ""
            directory: /root/tas_backups
          restore:
            enabled: false
            source: ""
            passphrase: ""
        options:
          backup:
            description: "Configuration options for the backup."
            type: "dict"
            version_added: "1.2.0"
            options:
              enabled:
                description: "Option to deploy the backup oneshot job and timer."
                type: "bool"
                version_added: "1.2.0"
              schedule:
                description: "The schedule for the backup oneshot job. By default runs daily at midnight."
                type: "str"
                version_added: "1.2.0"
              force_run:
                description: "Forcefully runs a manual backup."
                type: "bool"
                version_added: "1.2.0"
              passphrase:
                description: "The passphrase used to encrypt the compressed backup file."
                type: "str"
                version_added: "1.2.0"
              directory:
                description: "The directory used to store the backups on the remote server. Stored in /root/tas_backups by default."
                type: "str"
                version_added: "1.2.0"
          restore:
            description: "Configuration options for the restore."
            type: "dict"
            version_added: "1.2.0"
            options:
              enabled:
                description: >
                  Configure to restore a full TAS instance. It will always run the restore procedure as long as it is set to true.
                  Should only be set to true on a single Ansible execution and then reverted back to false.
                type: "bool"
                version_added: "1.2.0"
              source:
                description: >
                  The filepath leading the to compressed and encrypted backup file that will be used for the full restore.
                  Needs to be located on the Ansible Control Node.
                type: "str"
                version_added: "1.2.0"
              passphrase:
                description: "The passphrase used to decrypt the compressed backup file."
                type: "str"
                version_added: "1.2.0"
